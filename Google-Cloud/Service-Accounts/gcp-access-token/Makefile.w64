# PATH_OPENSSL points to the root instalation of OpenSSL Win64
# Default install path
PATH_OPENSSL = C:\Program Files\OpenSSL-Win64

# Custom install paths for testing specific versions
# PATH_OPENSSL = C:\openssl-1.1.1s
# PATH_OPENSSL = C:\openssl-3.0.7

SRC = src
SRC_SHARED = src-shared
INC = h
OUTDIR = build-windows
OBJDIR = $(OUTDIR)/obj

# Program executable
EXE = $(OUTDIR)\gcp-access-token.exe

INC_OPENSSL = "$(PATH_OPENSSL)\include"

CFLAGS = /nologo /c /MD /DOS_WINDOWS /W4 -Ih -I$(INC_OPENSSL)

# /MD    Links to multithreaded DLL using MSVCRT.lib.
# /MDd   Links to debug multithreaded DLL using MSVCRTD.lib.

# swiftc compiler flags
SWIFT_FLAGS = -Xcc -I$(INC_OPENSSL)

APPLINK = "$(PATH_OPENSSL)/include/openssl/applink.c"

# Microsoft linker flags
LINKER = -Xlinker /LIBPATH:"$(PATH_OPENSSL)/lib/vc"

SRC_FILES = \
	$(SRC)/jwt.swift\
	$(SRC)/main.swift

SRC_SHARED_FILES = \
	$(SRC_SHARED)/exec.swift\
	$(SRC_SHARED)/hex.swift\
	$(SRC_SHARED)/http.swift\
	$(SRC_SHARED)/service_account.swift\
	$(SRC_SHARED)/sign.swift\
	$(SRC_SHARED)/signature.swift\
	$(SRC_SHARED)/terminal.swift\
	$(SRC_SHARED)/x509.swift 

OBJs = \
	$(OBJDIR)/applink.obj\
	$(OBJDIR)/openssl.obj\
	$(OBJDIR)/terminal_win32.obj

all: src-shared $(OUTDIR) $(OBJDIR) $(EXE)

# Swift will not compile source files located in a parent directory. For example, if SHARED_SRC_FILES is located at ../src-shared, swift cannot find them.
src-shared:
	mkdir src-shared
	copy ..\src-shared src-shared

$(OBJDIR):
	mkdir $(OBJDIR)

$(OUTDIR):
	mkdir $(OUTDIR)

$(EXE): $(OBJs) $(SRC_FILES) $(SRC_SHARED_FILES) Makefile.w64
	swiftc $(SWIFT_FLAGS) -import-objc-header $(INC)/c-interface.h $(SRC_FILES) $(SRC_SHARED_FILES) $(OBJs) -o $(EXE) $(LINKER)

$(OBJDIR)/openssl.obj: $(SRC_SHARED)/openssl.c $(INC)/c-interface.h Makefile.w64
	cl $(CFLAGS) $(SRC_SHARED)/openssl.c /Fo$@

$(OBJDIR)/terminal_win32.obj: $(SRC_SHARED)/terminal_win32.c $(INC)/c-interface.h Makefile.w64
	cl $(CFLAGS) $(SRC_SHARED)/terminal_win32.c /Fo$@

$(OBJDIR)/applink.obj: $(APPLINK) Makefile.w64
	cl $(CFLAGS) /wd4152 /wd4996 $(APPLINK) /Fo$@

.PHONY: clean   
clean:
	rm -rf $(OBJDIR)
	rm -rf $(OUTDIR)
